name: Update Latest YouTube Video

on:
  schedule:
    - cron: '0 0 * * SUN'
  workflow_dispatch:

jobs:
  update-video:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install googleapis --force

      - name: Fetch Latest Video
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          node << 'EOF'
          const { google } = require('googleapis');
          const fs = require('fs');
          const path = require('path');

          async function getLatestVideo() {
            if (!process.env.YOUTUBE_API_KEY) {
              throw new Error('YouTube API key is not set in environment variables');
            }

            const youtube = google.youtube({
              version: 'v3',
              auth: process.env.YOUTUBE_API_KEY
            });

            try {
              const channelResponse = await youtube.channels.list({
                part: ['id'],
                forUsername: 'jyotirmoydotdev'
              });

              let channelId;
              if (!channelResponse.data.items || channelResponse.data.items.length === 0) {
                channelId = 'UC8DwWOpAGrGdi5jjIKhPw8g';
              } else {
                channelId = channelResponse.data.items[0].id;
              }

              const uploads = await youtube.search.list({
                part: ['snippet'],
                channelId: channelId,
                order: 'date',
                type: 'video'
              });

              if (!uploads.data.items || uploads.data.items.length === 0) {
                throw new Error('No videos found for the channel');
              }

              const video = uploads.data.items;
              
              let allVideo = video.map((item) => ({
                id: item.id.videoId,
                imgUrl: item.snippet.thumbnails.default.url,
                title: item.snippet.title,
                description: item.snippet.description,
                date: item.snippet.publishedAt,
              }));

              return allVideo;

            } catch (error) {
              console.error('YouTube API Error:', error.response?.data || error.message);
              throw error;
            }
          }

          async function updateDataFile() {
            const latestVideo = await getLatestVideo();
            const dataPath = path.join(process.cwd(), 'src', 'data.ts');
            
            if (!fs.existsSync(dataPath)) {
              throw new Error('data.ts file does not exist');
            }

            let fileContent = fs.readFileSync(dataPath, 'utf8');

            const newVideoArray = `export const video : { id:string, imgUrl:string, title:string, description:string, date:string }[] = ${JSON.stringify(latestVideo, null, 2)};`;
            
            fileContent = fileContent.replace(/export\s+const\s+video\s*:\s*\{[\s\S]*?\}\[\]\s*=\s*(\[[\s\S]*?\]);/, newVideoArray);

            fs.writeFileSync(dataPath, fileContent);

            console.log('Successfully updated video array in data.ts');
          }

          updateDataFile().catch(error => {
            console.error('Failed to update video data:', error);
            process.exit(1);
          });
          EOF

      - name: Commit and push if changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add src/data.ts
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update latest YouTube video" && git push)